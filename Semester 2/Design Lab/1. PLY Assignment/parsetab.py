
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMMA CONCAT DIV DOLLAR EQ GOTO GT HLT ID IF LABEL LENGTH LT MEMREF MOD MUL NE NOT NUMBER OR PRINT SHL SHR STOR STRING SUB SUBSTR SUM XORprogram : instruction_listinstruction_list : instruction instruction_list\n                        | instructioninstruction : opt_label commandopt_label : LABEL DOLLAR\n                 | emptycommand : memory_command\n               | arithmetic_command\n               | logical_command\n               | control_flow_command\n               | print_command\n               | string_commandmemory_command : STOR operand COMMA operandarithmetic_command : SUM operand COMMA operand\n                          | SUB operand COMMA operand\n                          | MUL operand COMMA operand\n                          | DIV operand COMMA operand\n                          | MOD operand COMMA operandlogical_command : AND operand COMMA operand\n                       | OR operand COMMA operand\n                       | XOR operand COMMA operand\n                       | NOT operand\n                       | SHL operand COMMA operand\n                       | SHR operand COMMA operandcontrol_flow_command : IF condition command\n                            | GOTO LABEL\n                            | HLTprint_command : PRINT operandstring_command : CONCAT operand COMMA operand\n                      | LENGTH operand\n                      | SUBSTR operand COMMA operand COMMA operandcondition : operand EQ operand\n                 | operand NE operand\n                 | operand GT operand\n                 | operand LT operandoperand : NUMBER\n               | STRING\n               | MEMREF\n               | IDempty :'
    
_lr_action_items = {'LABEL':([0,3,8,9,10,11,12,13,14,28,29,36,37,38,39,48,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,91,94,],[5,5,-4,-7,-8,-9,-10,-11,-12,53,-27,-36,-37,-38,-39,-22,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-29,-31,]),'STOR':([0,3,4,6,8,9,10,11,12,13,14,29,34,36,37,38,39,48,51,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,],[-40,-40,15,-6,-4,-7,-8,-9,-10,-11,-12,-27,-5,-36,-37,-38,-39,-22,15,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-32,-33,-34,-35,-29,-31,]),'SUM':([0,3,4,6,8,9,10,11,12,13,14,29,34,36,37,38,39,48,51,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,],[-40,-40,16,-6,-4,-7,-8,-9,-10,-11,-12,-27,-5,-36,-37,-38,-39,-22,16,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-32,-33,-34,-35,-29,-31,]),'SUB':([0,3,4,6,8,9,10,11,12,13,14,29,34,36,37,38,39,48,51,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,],[-40,-40,17,-6,-4,-7,-8,-9,-10,-11,-12,-27,-5,-36,-37,-38,-39,-22,17,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-32,-33,-34,-35,-29,-31,]),'MUL':([0,3,4,6,8,9,10,11,12,13,14,29,34,36,37,38,39,48,51,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,],[-40,-40,18,-6,-4,-7,-8,-9,-10,-11,-12,-27,-5,-36,-37,-38,-39,-22,18,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-32,-33,-34,-35,-29,-31,]),'DIV':([0,3,4,6,8,9,10,11,12,13,14,29,34,36,37,38,39,48,51,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,],[-40,-40,19,-6,-4,-7,-8,-9,-10,-11,-12,-27,-5,-36,-37,-38,-39,-22,19,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-32,-33,-34,-35,-29,-31,]),'MOD':([0,3,4,6,8,9,10,11,12,13,14,29,34,36,37,38,39,48,51,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,],[-40,-40,20,-6,-4,-7,-8,-9,-10,-11,-12,-27,-5,-36,-37,-38,-39,-22,20,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-32,-33,-34,-35,-29,-31,]),'AND':([0,3,4,6,8,9,10,11,12,13,14,29,34,36,37,38,39,48,51,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,],[-40,-40,21,-6,-4,-7,-8,-9,-10,-11,-12,-27,-5,-36,-37,-38,-39,-22,21,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-32,-33,-34,-35,-29,-31,]),'OR':([0,3,4,6,8,9,10,11,12,13,14,29,34,36,37,38,39,48,51,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,],[-40,-40,22,-6,-4,-7,-8,-9,-10,-11,-12,-27,-5,-36,-37,-38,-39,-22,22,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-32,-33,-34,-35,-29,-31,]),'XOR':([0,3,4,6,8,9,10,11,12,13,14,29,34,36,37,38,39,48,51,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,],[-40,-40,23,-6,-4,-7,-8,-9,-10,-11,-12,-27,-5,-36,-37,-38,-39,-22,23,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-32,-33,-34,-35,-29,-31,]),'NOT':([0,3,4,6,8,9,10,11,12,13,14,29,34,36,37,38,39,48,51,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,],[-40,-40,24,-6,-4,-7,-8,-9,-10,-11,-12,-27,-5,-36,-37,-38,-39,-22,24,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-32,-33,-34,-35,-29,-31,]),'SHL':([0,3,4,6,8,9,10,11,12,13,14,29,34,36,37,38,39,48,51,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,],[-40,-40,25,-6,-4,-7,-8,-9,-10,-11,-12,-27,-5,-36,-37,-38,-39,-22,25,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-32,-33,-34,-35,-29,-31,]),'SHR':([0,3,4,6,8,9,10,11,12,13,14,29,34,36,37,38,39,48,51,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,],[-40,-40,26,-6,-4,-7,-8,-9,-10,-11,-12,-27,-5,-36,-37,-38,-39,-22,26,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-32,-33,-34,-35,-29,-31,]),'IF':([0,3,4,6,8,9,10,11,12,13,14,29,34,36,37,38,39,48,51,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,],[-40,-40,27,-6,-4,-7,-8,-9,-10,-11,-12,-27,-5,-36,-37,-38,-39,-22,27,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-32,-33,-34,-35,-29,-31,]),'GOTO':([0,3,4,6,8,9,10,11,12,13,14,29,34,36,37,38,39,48,51,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,],[-40,-40,28,-6,-4,-7,-8,-9,-10,-11,-12,-27,-5,-36,-37,-38,-39,-22,28,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-32,-33,-34,-35,-29,-31,]),'HLT':([0,3,4,6,8,9,10,11,12,13,14,29,34,36,37,38,39,48,51,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,],[-40,-40,29,-6,-4,-7,-8,-9,-10,-11,-12,-27,-5,-36,-37,-38,-39,-22,29,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-32,-33,-34,-35,-29,-31,]),'PRINT':([0,3,4,6,8,9,10,11,12,13,14,29,34,36,37,38,39,48,51,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,],[-40,-40,30,-6,-4,-7,-8,-9,-10,-11,-12,-27,-5,-36,-37,-38,-39,-22,30,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-32,-33,-34,-35,-29,-31,]),'CONCAT':([0,3,4,6,8,9,10,11,12,13,14,29,34,36,37,38,39,48,51,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,],[-40,-40,31,-6,-4,-7,-8,-9,-10,-11,-12,-27,-5,-36,-37,-38,-39,-22,31,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-32,-33,-34,-35,-29,-31,]),'LENGTH':([0,3,4,6,8,9,10,11,12,13,14,29,34,36,37,38,39,48,51,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,],[-40,-40,32,-6,-4,-7,-8,-9,-10,-11,-12,-27,-5,-36,-37,-38,-39,-22,32,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-32,-33,-34,-35,-29,-31,]),'SUBSTR':([0,3,4,6,8,9,10,11,12,13,14,29,34,36,37,38,39,48,51,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,],[-40,-40,33,-6,-4,-7,-8,-9,-10,-11,-12,-27,-5,-36,-37,-38,-39,-22,33,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-32,-33,-34,-35,-29,-31,]),'$end':([1,2,3,7,8,9,10,11,12,13,14,29,36,37,38,39,48,53,54,56,69,76,77,78,79,80,81,82,83,84,85,86,91,94,],[0,-1,-3,-2,-4,-7,-8,-9,-10,-11,-12,-27,-36,-37,-38,-39,-22,-26,-28,-30,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-29,-31,]),'DOLLAR':([5,],[34,]),'NUMBER':([15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,93,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'STRING':([15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,93,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'MEMREF':([15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,93,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'ID':([15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,93,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'COMMA':([35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,55,57,92,],[58,-36,-37,-38,-39,59,60,61,62,63,64,65,66,67,68,74,75,93,]),'EQ':([36,37,38,39,52,],[-36,-37,-38,-39,70,]),'NE':([36,37,38,39,52,],[-36,-37,-38,-39,71,]),'GT':([36,37,38,39,52,],[-36,-37,-38,-39,72,]),'LT':([36,37,38,39,52,],[-36,-37,-38,-39,73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instruction_list':([0,3,],[2,7,]),'instruction':([0,3,],[3,3,]),'opt_label':([0,3,],[4,4,]),'empty':([0,3,],[6,6,]),'command':([4,51,],[8,69,]),'memory_command':([4,51,],[9,9,]),'arithmetic_command':([4,51,],[10,10,]),'logical_command':([4,51,],[11,11,]),'control_flow_command':([4,51,],[12,12,]),'print_command':([4,51,],[13,13,]),'string_command':([4,51,],[14,14,]),'operand':([15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,93,],[35,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,57,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,]),'condition':([27,],[51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instruction_list','program',1,'p_program','hello.py',89),
  ('instruction_list -> instruction instruction_list','instruction_list',2,'p_instruction_list','hello.py',93),
  ('instruction_list -> instruction','instruction_list',1,'p_instruction_list','hello.py',94),
  ('instruction -> opt_label command','instruction',2,'p_instruction','hello.py',101),
  ('opt_label -> LABEL DOLLAR','opt_label',2,'p_opt_label','hello.py',111),
  ('opt_label -> empty','opt_label',1,'p_opt_label','hello.py',112),
  ('command -> memory_command','command',1,'p_command','hello.py',116),
  ('command -> arithmetic_command','command',1,'p_command','hello.py',117),
  ('command -> logical_command','command',1,'p_command','hello.py',118),
  ('command -> control_flow_command','command',1,'p_command','hello.py',119),
  ('command -> print_command','command',1,'p_command','hello.py',120),
  ('command -> string_command','command',1,'p_command','hello.py',121),
  ('memory_command -> STOR operand COMMA operand','memory_command',4,'p_memory_command','hello.py',125),
  ('arithmetic_command -> SUM operand COMMA operand','arithmetic_command',4,'p_arithmetic_command','hello.py',135),
  ('arithmetic_command -> SUB operand COMMA operand','arithmetic_command',4,'p_arithmetic_command','hello.py',136),
  ('arithmetic_command -> MUL operand COMMA operand','arithmetic_command',4,'p_arithmetic_command','hello.py',137),
  ('arithmetic_command -> DIV operand COMMA operand','arithmetic_command',4,'p_arithmetic_command','hello.py',138),
  ('arithmetic_command -> MOD operand COMMA operand','arithmetic_command',4,'p_arithmetic_command','hello.py',139),
  ('logical_command -> AND operand COMMA operand','logical_command',4,'p_logical_command','hello.py',172),
  ('logical_command -> OR operand COMMA operand','logical_command',4,'p_logical_command','hello.py',173),
  ('logical_command -> XOR operand COMMA operand','logical_command',4,'p_logical_command','hello.py',174),
  ('logical_command -> NOT operand','logical_command',2,'p_logical_command','hello.py',175),
  ('logical_command -> SHL operand COMMA operand','logical_command',4,'p_logical_command','hello.py',176),
  ('logical_command -> SHR operand COMMA operand','logical_command',4,'p_logical_command','hello.py',177),
  ('control_flow_command -> IF condition command','control_flow_command',3,'p_control_flow_command','hello.py',184),
  ('control_flow_command -> GOTO LABEL','control_flow_command',2,'p_control_flow_command','hello.py',185),
  ('control_flow_command -> HLT','control_flow_command',1,'p_control_flow_command','hello.py',186),
  ('print_command -> PRINT operand','print_command',2,'p_print_command','hello.py',195),
  ('string_command -> CONCAT operand COMMA operand','string_command',4,'p_string_command','hello.py',199),
  ('string_command -> LENGTH operand','string_command',2,'p_string_command','hello.py',200),
  ('string_command -> SUBSTR operand COMMA operand COMMA operand','string_command',6,'p_string_command','hello.py',201),
  ('condition -> operand EQ operand','condition',3,'p_condition','hello.py',210),
  ('condition -> operand NE operand','condition',3,'p_condition','hello.py',211),
  ('condition -> operand GT operand','condition',3,'p_condition','hello.py',212),
  ('condition -> operand LT operand','condition',3,'p_condition','hello.py',213),
  ('operand -> NUMBER','operand',1,'p_operand','hello.py',217),
  ('operand -> STRING','operand',1,'p_operand','hello.py',218),
  ('operand -> MEMREF','operand',1,'p_operand','hello.py',219),
  ('operand -> ID','operand',1,'p_operand','hello.py',220),
  ('empty -> <empty>','empty',0,'p_empty','hello.py',231),
]
