{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/krishna/Documents/js-ml/frontend/app/page.js"],"sourcesContent":["\"use client\";\nimport KNN from \"ml-knn\";\n// import LogisticRegression from \"ml-logistic-regression\";\n// import { DecisionTreeClassifier } from \"ml-cart\";\n// import { RandomForestClassifier } from \"ml-random-forest\";\nimport { useState } from \"react\";\nimport { Matrix } from \"ml-matrix\";\n\n// Custom TF-IDF Implementation\nclass TFIDF {\n  constructor() {\n    this.documents = [];\n    this.termFreqs = [];\n    this.idfScores = {};\n  }\n\n  tokenize(text) {\n    return text.toLowerCase().match(/\\b\\w+\\b/g) || [];\n  }\n\n  computeTF(words) {\n    const tf = {};\n    words.forEach((word) => {\n      tf[word] = (tf[word] || 0) + 1;\n    });\n    const totalWords = words.length;\n    Object.keys(tf).forEach((word) => {\n      tf[word] /= totalWords;\n    });\n    return tf;\n  }\n\n  computeIDF() {\n    console.debug(\"Computing IDF\");\n    const totalDocs = this.documents.length;\n    const docFrequency = {};\n\n    this.documents.forEach((words) => {\n      const uniqueWords = new Set(words);\n      uniqueWords.forEach((word) => {\n        docFrequency[word] = (docFrequency[word] || 0) + 1;\n      });\n    });\n\n    Object.keys(docFrequency).forEach((word) => {\n      this.idfScores[word] = Math.log(totalDocs / (docFrequency[word] + 1));\n    });\n  }\n\n  fit(documents) {\n    console.debug(\"Fitting TF-IDF model\");\n    this.documents = documents.map(this.tokenize);\n    this.termFreqs = this.documents.map((doc) => this.computeTF(doc));\n    this.computeIDF();\n  }\n\n  transform(text) {\n    console.debug(\"Transforming input text\", text);\n    const words = this.tokenize(text);\n    const tf = this.computeTF(words);\n    const tfidfVector = {};\n\n    Object.keys(tf).forEach((word) => {\n      if (this.idfScores[word] !== undefined) {\n        tfidfVector[word] = tf[word] * this.idfScores[word];\n      }\n    });\n\n    return Object.values(tfidfVector);\n  }\n}\n\nexport default function Home() {\n  const [file, setFile] = useState(null);\n  const [modelType, setModelType] = useState(\"knn\");\n  const [trainResult, setTrainResult] = useState(null);\n  const [inputText, setInputText] = useState(\"\");\n  const [prediction, setPrediction] = useState(null);\n  const [uniqueLabels, setUniqueLabels] = useState([]);\n  const [isTraining, setIsTraining] = useState(false);\n\n  const tfidf = new TFIDF();\n\n  const handleFileUpload = (event) => {\n    console.debug(\"File selected\", event.target.files[0]);\n    setFile(event.target.files[0]);\n  };\n\n  const preprocessData = async (file) => {\n    console.debug(\"Preprocessing file\", file.name);\n    const text = await file.text();\n    let rows = text.split(\"\\n\").map((row) => row.split(\",\"));\n\n    // Ensure each row has at least two columns (data + label)\n    rows = rows.filter((row) => row.length >= 2);\n\n    // Extract labels (last column) and data (rest of the row)\n    let labels = rows\n      .map((row) => row.pop()?.trim())\n      .filter((label) => label !== \"\" && label !== undefined);\n\n    // let labels = rows.map((row) => row.pop().trim().toLowerCase()); // Normalize labels\n    let data = rows.map((row) => row.join(\" \")); // Join rest as text\n\n    // Filter out incorrect labels\n    const validLabels = [\"real\", \"fake\"];\n    const filteredIndices = labels\n      .map((label, index) => (validLabels.includes(label) ? index : -1))\n      .filter((index) => index !== -1);\n\n    // Apply filtering\n    labels = filteredIndices.map((i) => labels[i]);\n    data = filteredIndices.map((i) => data[i]);\n\n    setUniqueLabels([...new Set(labels)]);\n\n    // console.log(\"Final Labels:\", labels);\n    // console.log(\"Final Data:\", data);\n\n    tfidf.fit(data);\n    const transformedData = data.map((text) => tfidf.transform(text));\n\n    // Shuffle data\n    const shuffledIndices = [...Array(transformedData.length).keys()].sort(\n      () => Math.random() - 0.5\n    );\n    const shuffledData = shuffledIndices.map((i) => transformedData[i]);\n    const shuffledLabels = shuffledIndices.map((i) => labels[i]);\n\n    // Count the classes\n    const classCounts = { real: 0, fake: 0 };\n    shuffledLabels.forEach((label) => {\n      classCounts[label]++;\n    });\n\n    // console.log(\"Class counts:\", classCounts);\n    // console.log(\"Shuffled data:\", shuffledData);\n    // console.log(\"Shuffled labels:\", shuffledLabels);\n    // console.log(\"TF-IDF scores:\", tfidf.idfScores);\n\n    return { trainData: shuffledData, trainLabels: shuffledLabels };\n  };\n\n  const trainModel = async (event) => {\n    event.preventDefault();\n    if (!file) return;\n    setIsTraining(true);\n\n    console.debug(\"Training model type\", modelType);\n    const { trainData, trainLabels } = await preprocessData(file);\n\n    let model;\n    switch (modelType) {\n      case \"knn\":\n        model = new KNN(trainData, trainLabels);\n        break;\n        // case \"logistic_regression\":\n        //   console.debug(\"Formatted Data:\", trainData);\n        //   console.debug(\"Formatted Labels:\", numericLabels);\n\n        //   model = new LogisticRegression();\n        //   const formattedLabels = new Matrix(\n        //     trainLabels.map((label) => [Number(label)])\n        //   );\n        //   console.log(\"Formatted labels:\", formattedLabels);\n        //   const numericLabels = trainLabels.map((label) => {\n        //     const num = Number(label);\n        //     return isNaN(num) ? 0 : num;\n        //   });\n        //   model.train(trainData, numericLabels);\n\n        //   break;\n        // case \"random_forest\":\n        //   model = new RandomForestClassifier({ nEstimators: 10 });\n        //   model.train(trainData, trainLabels.map(Number));\n        //   break;\n        // case \"decision_tree\":\n        model = new DecisionTreeClassifier();\n        model.train(trainData, trainLabels.map(Number));\n        break;\n      default:\n        return;\n    }\n\n    console.debug(\"Model trained successfully\", model);\n    setTrainResult(`Model ${modelType} trained successfully`);\n    setIsTraining(false);\n  };\n\n  const makePrediction = (event) => {\n    event.preventDefault();\n    if (!trainResult) return;\n\n    console.debug(\"Making prediction for input\", inputText);\n    const vector = tfidf.transform(inputText);\n    setPrediction(\n      uniqueLabels[Math.floor(Math.random() * uniqueLabels.length)]\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\">\n      <div className=\"bg-white shadow-lg rounded-2xl p-6 w-full max-w-md\">\n        <h2 className=\"text-xl font-semibold text-gray-700 mb-4\">\n          Train a Model\n        </h2>\n        <form className=\"space-y-4\" onSubmit={trainModel}>\n          <input\n            type=\"file\"\n            name=\"file\"\n            accept=\".csv\"\n            onChange={handleFileUpload}\n            required\n          />\n          <select\n            name=\"model\"\n            value={modelType}\n            onChange={(e) => setModelType(e.target.value)}\n            required\n          >\n            <option value=\"knn\">KNN</option>\n            <option value=\"logistic_regression\">Logistic Regression</option>\n            <option value=\"random_forest\">Random Forest</option>\n            <option value=\"decision_tree\">Decision Tree</option>\n          </select>\n          <button type=\"submit\" disabled={isTraining}>\n            {isTraining ? \"Training...\" : \"Train\"}\n          </button>\n        </form>\n        {trainResult && <p>{trainResult}</p>}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":["file:///Users/krishna/Documents/js-ml/frontend/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///Users/krishna/Documents/js-ml/frontend/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file:///Users/krishna/Documents/js-ml/frontend/node_modules/ml-distance-euclidean/lib-es6/euclidean.js"],"sourcesContent":["export function squaredEuclidean(p, q) {\r\n    let d = 0;\r\n    for (let i = 0; i < p.length; i++) {\r\n        d += (p[i] - q[i]) * (p[i] - q[i]);\r\n    }\r\n    return d;\r\n}\r\nexport function euclidean(p, q) {\r\n    return Math.sqrt(squaredEuclidean(p, q));\r\n}\r\n"],"names":[],"mappings":";;;;AAAO,SAAS,iBAAiB,CAAC,EAAE,CAAC;IACjC,IAAI,IAAI;IACR,IAAK,IAAI,IAAI,GAAG,IAAI,EAAE,MAAM,EAAE,IAAK;QAC/B,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IACrC;IACA,OAAO;AACX;AACO,SAAS,UAAU,CAAC,EAAE,CAAC;IAC1B,OAAO,KAAK,IAAI,CAAC,iBAAiB,GAAG;AACzC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///Users/krishna/Documents/js-ml/frontend/node_modules/ml-knn/src/KDTree.js"],"sourcesContent":["/*\n * Original code from:\n *\n * k-d Tree JavaScript - V 1.01\n *\n * https://github.com/ubilabs/kd-tree-javascript\n *\n * @author Mircea Pricop <pricop@ubilabs.net>, 2012\n * @author Martin Kleppe <kleppe@ubilabs.net>, 2012\n * @author Ubilabs http://ubilabs.net, 2012\n * @license MIT License <http://www.opensource.org/licenses/mit-license.php>\n */\n\nfunction Node(obj, dimension, parent) {\n  this.obj = obj;\n  this.left = null;\n  this.right = null;\n  this.parent = parent;\n  this.dimension = dimension;\n}\n\nexport default class KDTree {\n  constructor(points, metric) {\n    // If points is not an array, assume we're loading a pre-built tree\n    if (!Array.isArray(points)) {\n      this.dimensions = points.dimensions;\n      this.root = points;\n      restoreParent(this.root);\n    } else {\n      this.dimensions = new Array(points[0].length);\n      for (var i = 0; i < this.dimensions.length; i++) {\n        this.dimensions[i] = i;\n      }\n      this.root = buildTree(points, 0, null, this.dimensions);\n    }\n    this.metric = metric;\n  }\n\n  // Convert to a JSON serializable structure; this just requires removing\n  // the `parent` property\n  toJSON() {\n    const result = toJSONImpl(this.root, true);\n    result.dimensions = this.dimensions;\n    return result;\n  }\n\n  nearest(point, maxNodes, maxDistance) {\n    const metric = this.metric;\n    const dimensions = this.dimensions;\n    var i;\n\n    const bestNodes = new BinaryHeap(function (e) {\n      return -e[1];\n    });\n\n    function nearestSearch(node) {\n      const dimension = dimensions[node.dimension];\n      const ownDistance = metric(point, node.obj);\n      const linearPoint = {};\n      var bestChild, linearDistance, otherChild, i;\n\n      function saveNode(node, distance) {\n        bestNodes.push([node, distance]);\n        if (bestNodes.size() > maxNodes) {\n          bestNodes.pop();\n        }\n      }\n\n      for (i = 0; i < dimensions.length; i += 1) {\n        if (i === node.dimension) {\n          linearPoint[dimensions[i]] = point[dimensions[i]];\n        } else {\n          linearPoint[dimensions[i]] = node.obj[dimensions[i]];\n        }\n      }\n\n      linearDistance = metric(linearPoint, node.obj);\n\n      if (node.right === null && node.left === null) {\n        if (bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[1]) {\n          saveNode(node, ownDistance);\n        }\n        return;\n      }\n\n      if (node.right === null) {\n        bestChild = node.left;\n      } else if (node.left === null) {\n        bestChild = node.right;\n      } else {\n        if (point[dimension] < node.obj[dimension]) {\n          bestChild = node.left;\n        } else {\n          bestChild = node.right;\n        }\n      }\n\n      nearestSearch(bestChild);\n\n      if (bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[1]) {\n        saveNode(node, ownDistance);\n      }\n\n      if (\n        bestNodes.size() < maxNodes ||\n        Math.abs(linearDistance) < bestNodes.peek()[1]\n      ) {\n        if (bestChild === node.left) {\n          otherChild = node.right;\n        } else {\n          otherChild = node.left;\n        }\n        if (otherChild !== null) {\n          nearestSearch(otherChild);\n        }\n      }\n    }\n\n    if (maxDistance) {\n      for (i = 0; i < maxNodes; i += 1) {\n        bestNodes.push([null, maxDistance]);\n      }\n    }\n\n    if (this.root) {\n      nearestSearch(this.root);\n    }\n\n    const result = [];\n    for (i = 0; i < Math.min(maxNodes, bestNodes.content.length); i += 1) {\n      if (bestNodes.content[i][0]) {\n        result.push([bestNodes.content[i][0].obj, bestNodes.content[i][1]]);\n      }\n    }\n    return result;\n  }\n}\n\nfunction toJSONImpl(src) {\n  const dest = new Node(src.obj, src.dimension, null);\n  if (src.left) dest.left = toJSONImpl(src.left);\n  if (src.right) dest.right = toJSONImpl(src.right);\n  return dest;\n}\n\nfunction buildTree(points, depth, parent, dimensions) {\n  const dim = depth % dimensions.length;\n\n  if (points.length === 0) {\n    return null;\n  }\n  if (points.length === 1) {\n    return new Node(points[0], dim, parent);\n  }\n\n  points.sort((a, b) => a[dimensions[dim]] - b[dimensions[dim]]);\n\n  const median = Math.floor(points.length / 2);\n  const node = new Node(points[median], dim, parent);\n  node.left = buildTree(points.slice(0, median), depth + 1, node, dimensions);\n  node.right = buildTree(points.slice(median + 1), depth + 1, node, dimensions);\n\n  return node;\n}\n\nfunction restoreParent(root) {\n  if (root.left) {\n    root.left.parent = root;\n    restoreParent(root.left);\n  }\n\n  if (root.right) {\n    root.right.parent = root;\n    restoreParent(root.right);\n  }\n}\n\n// Binary heap implementation from:\n// http://eloquentjavascript.net/appendix2.html\nclass BinaryHeap {\n  constructor(scoreFunction) {\n    this.content = [];\n    this.scoreFunction = scoreFunction;\n  }\n\n  push(element) {\n    // Add the new element to the end of the array.\n    this.content.push(element);\n    // Allow it to bubble up.\n    this.bubbleUp(this.content.length - 1);\n  }\n\n  pop() {\n    // Store the first element so we can return it later.\n    var result = this.content[0];\n    // Get the element at the end of the array.\n    var end = this.content.pop();\n    // If there are any elements left, put the end element at the\n    // start, and let it sink down.\n    if (this.content.length > 0) {\n      this.content[0] = end;\n      this.sinkDown(0);\n    }\n    return result;\n  }\n\n  peek() {\n    return this.content[0];\n  }\n\n  size() {\n    return this.content.length;\n  }\n\n  bubbleUp(n) {\n    // Fetch the element that has to be moved.\n    var element = this.content[n];\n    // When at 0, an element can not go up any further.\n    while (n > 0) {\n      // Compute the parent element's index, and fetch it.\n      const parentN = Math.floor((n + 1) / 2) - 1;\n      const parent = this.content[parentN];\n      // Swap the elements if the parent is greater.\n      if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n        this.content[parentN] = element;\n        this.content[n] = parent;\n        // Update 'n' to continue at the new position.\n        n = parentN;\n      } else {\n        // Found a parent that is less, no need to move it further.\n        break;\n      }\n    }\n  }\n\n  sinkDown(n) {\n    // Look up the target element and its score.\n    var length = this.content.length;\n    var element = this.content[n];\n    var elemScore = this.scoreFunction(element);\n\n    while (true) {\n      // Compute the indices of the child elements.\n      var child2N = (n + 1) * 2;\n      var child1N = child2N - 1;\n      // This is used to store the new position of the element,\n      // if any.\n      var swap = null;\n      // If the first child exists (is inside the array)...\n      if (child1N < length) {\n        // Look it up and compute its score.\n        var child1 = this.content[child1N];\n        var child1Score = this.scoreFunction(child1);\n        // If the score is less than our element's, we need to swap.\n        if (child1Score < elemScore) {\n          swap = child1N;\n        }\n      }\n      // Do the same checks for the other child.\n      if (child2N < length) {\n        var child2 = this.content[child2N];\n        var child2Score = this.scoreFunction(child2);\n        if (child2Score < (swap === null ? elemScore : child1Score)) {\n          swap = child2N;\n        }\n      }\n\n      // If the element needs to be moved, swap it, and continue.\n      if (swap !== null) {\n        this.content[n] = this.content[swap];\n        this.content[swap] = element;\n        n = swap;\n      } else {\n        // Otherwise, we are done.\n        break;\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 607, "column": 0}, "map": {"version":3,"sources":["file:///Users/krishna/Documents/js-ml/frontend/node_modules/ml-knn/src/index.js"],"sourcesContent":["import { euclidean as euclideanDistance } from 'ml-distance-euclidean';\n\nimport KDTree from './KDTree';\n\nexport default class KNN {\n  /**\n   * @param {Array} dataset\n   * @param {Array} labels\n   * @param {object} options\n   * @param {number} [options.k=numberOfClasses + 1] - Number of neighbors to classify.\n   * @param {function} [options.distance=euclideanDistance] - Distance function that takes two parameters.\n   */\n  constructor(dataset, labels, options = {}) {\n    if (dataset === true) {\n      const model = labels;\n      this.kdTree = new KDTree(model.kdTree, options);\n      this.k = model.k;\n      this.classes = new Set(model.classes);\n      this.isEuclidean = model.isEuclidean;\n      return;\n    }\n\n    const classes = new Set(labels);\n\n    const { distance = euclideanDistance, k = classes.size + 1 } = options;\n\n    const points = new Array(dataset.length);\n    for (var i = 0; i < points.length; ++i) {\n      points[i] = dataset[i].slice();\n    }\n\n    for (i = 0; i < labels.length; ++i) {\n      points[i].push(labels[i]);\n    }\n\n    this.kdTree = new KDTree(points, distance);\n    this.k = k;\n    this.classes = classes;\n    this.isEuclidean = distance === euclideanDistance;\n  }\n\n  /**\n   * Create a new KNN instance with the given model.\n   * @param {object} model\n   * @param {function} distance=euclideanDistance - distance function must be provided if the model wasn't trained with euclidean distance.\n   * @return {KNN}\n   */\n  static load(model, distance = euclideanDistance) {\n    if (model.name !== 'KNN') {\n      throw new Error(`invalid model: ${model.name}`);\n    }\n    if (!model.isEuclidean && distance === euclideanDistance) {\n      throw new Error(\n        'a custom distance function was used to create the model. Please provide it again'\n      );\n    }\n    if (model.isEuclidean && distance !== euclideanDistance) {\n      throw new Error(\n        'the model was created with the default distance function. Do not load it with another one'\n      );\n    }\n    return new KNN(true, model, distance);\n  }\n\n  /**\n   * Return a JSON containing the kd-tree model.\n   * @return {object} JSON KNN model.\n   */\n  toJSON() {\n    return {\n      name: 'KNN',\n      kdTree: this.kdTree,\n      k: this.k,\n      classes: Array.from(this.classes),\n      isEuclidean: this.isEuclidean\n    };\n  }\n\n  /**\n   * Predicts the output given the matrix to predict.\n   * @param {Array} dataset\n   * @return {Array} predictions\n   */\n  predict(dataset) {\n    if (Array.isArray(dataset)) {\n      if (typeof dataset[0] === 'number') {\n        return getSinglePrediction(this, dataset);\n      } else if (\n        Array.isArray(dataset[0]) &&\n        typeof dataset[0][0] === 'number'\n      ) {\n        const predictions = new Array(dataset.length);\n        for (var i = 0; i < dataset.length; i++) {\n          predictions[i] = getSinglePrediction(this, dataset[i]);\n        }\n        return predictions;\n      }\n    }\n    throw new TypeError('dataset to predict must be an array or a matrix');\n  }\n}\n\nfunction getSinglePrediction(knn, currentCase) {\n  var nearestPoints = knn.kdTree.nearest(currentCase, knn.k);\n  var pointsPerClass = {};\n  var predictedClass = -1;\n  var maxPoints = -1;\n  var lastElement = nearestPoints[0][0].length - 1;\n\n  for (var element of knn.classes) {\n    pointsPerClass[element] = 0;\n  }\n\n  for (var i = 0; i < nearestPoints.length; ++i) {\n    var currentClass = nearestPoints[i][0][lastElement];\n    var currentPoints = ++pointsPerClass[currentClass];\n    if (currentPoints > maxPoints) {\n      predictedClass = currentClass;\n      maxPoints = currentPoints;\n    }\n  }\n\n  return predictedClass;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 716, "column": 0}, "map": {"version":3,"sources":["file:///Users/krishna/Documents/js-ml/frontend/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0],"debugId":null}}]
}